- name: Apt Update
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
 
    - name: Install apt-transport-https and curl
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - curl
          - gpg
        state: present


- name: Containerd installation
  hosts: all
  become: true
  tasks:
    - name: Removing conflicting Docker-related packages
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - podman-docker
          - containerd
          - runc
        state: absent
    
    - name: Install prerequisites
      ansible.builtin.apt:
        name: ca-certificates
        state: present

    - name: Create /etc/apt/keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Check if Docker GPG keyfile exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.asc
      register: gpg_key_file
    
    - name: Get Docker's official GPG key
      ansible.builtin.uri:
        url: https://download.docker.com/linux/debian/gpg
        method: GET
        dest: /etc/apt/keyrings/docker.asc
        follow_redirects: safe
      when: gpg_key_file.stat.exists == False
      register: gpg_key_response
    
    - name: Modify key permission
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.asc
        mode: 'a+r'
    
    - name: Get system architecture
      ansible.builtin.command: dpkg --print-architecture
      register: architecture_output
    
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: debug check
      ansible.builtin.debug:
        var: "{{ architecture_output.stdout }}"

    - name: debug check
      ansible.builtin.debug:
        var: "{{ ansible_distribution_release }}"
    
    - name: Add repository to Apt sources
      ansible.builtin.apt_repository:
        repo: |
          deb [arch={{ architecture_output.stdout }}
          signed-by=/etc/apt/keyrings/docker.asc] 
          https://download.docker.com/linux/debian
          {{ ansible_distribution_release }} stable
        filename: docker
        state: present
    
          
    - name: Verify file repository exist
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/docker.list
      register: filestat

    - name: Validate file existence
      ansible.builtin.assert:
        that: filestat.stat.exists
        fail_msg: |
          Docker repository does not exist at 
          /etc/apt/sources.list.d/docker.list

    ### alternative
    # - name: Add Docker's official GPG key
    #   apt_key:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     state: present

    # - name: Add Docker repository
    #   apt_repository:
    #     repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    #     state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Verify Docker installation
      community.docker.docker_container:
        name: hello-world
        image: hello-world
        state: started

- name: Containerd configuration
  hosts: all
  become: true
  tasks:
    - name: Create the /etc/containerd/directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory

    - name: Retrieve default containerd configuration
      ansible.builtin.command: containerd config default
      register: containerd_config

    - name: Create systemd drop-in config
      ansible.builtin.template:
        src: ./template/containerd.toml
        dest: /etc/containerd/config.toml

    - name: Restart containerd service
      ansible.builtin.systemd:
        name: containerd
        state: restarted

- name: k8s installation
  hosts: all
  become: true
  tasks:
    - name: Check if k8s GPG keyfile exists
      ansible.builtin.stat:
        path: /tmp/Release.key
      register: gpg_key_file
    
    - name: Add k8s apt key
      ansible.builtin.uri:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        method: GET
        dest: /tmp/Release.key
        follow_redirects: safe
      when: gpg_key_file.stat.exists == False

    - name: Modify key permission
      ansible.builtin.file:
        path: /tmp/Release.key
        mode: 'a+r'

    - name: Dearmor GPG key
      ansible.builtin.command: |
          gpg          
          --yes 
          --output /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          --dearmor /tmp/Release.key 

    # - name: Move GPG key
    #   ansible.builtin.command: |
    #     mv /tmp/Release.key.gpg
    #     /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add k8s repository
      ansible.builtin.apt_repository:
        repo: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] 
          https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        state: present

    # - name: Verify file repository exist
    #   ansible.builtin.stat:
    #     path: /etc/apt/sources.list.d/kubernetes.list
    #   register: filestat

    # - name: Validate file existence
    #   ansible.builtin.assert:
    #     that: filestat.stat.exists
    #     fail_msg: |
    #       k8s repository does not exist at 
    #       /etc/apt/sources.list.d/kubernetes.list

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: k8s packages installation
      ansible.builtin.apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
          - kubernetes-cni
