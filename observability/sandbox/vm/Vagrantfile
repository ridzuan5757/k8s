#ENV['VAGRANT_NO_PARALLEL'] = 'yes'
VAGRANT_BOX = "generic/debian12"
CPUS_MASTER_NODE = 2
CPUS_WORKER_NODE = 1
MEMORY_MASTER_NODE = 2048
MEMORY_WORKER_NODE = 1024
WORKER_NODES_COUNT = 2

Vagrant.configure("2") do |config|

  config.vm.define "kmaster" do |node|
    node.vm.box = VAGRANT_BOX
    node.vm.box_check_update = false
    node.vm.hostname = "kmaster.silentmode.com"

    node.vm.network "private_network", ip: "172.16.16.100"

    node.vm.provider :virtualbox do |v|
      v.name = "kmaster"
      v.memory = MEMORY_MASTER_NODE
      v.cpus = CPUS_MASTER_NODE
    end
  end

  (1..WORKER_NODES_COUNT).each do |i|
    config.vm.define "kworker#{i}" do |node|
      node.vm.box = VAGRANT_BOX
      node.vm.box_check_update = false
      node.vm.hostname = "kworker#{i}.silentmode.com"

      node.vm.network "private_network", ip: "172.16.16.10#{i}"

      node.vm.provider :virtualbox do |v|
        v.name = "kworker#{i}"
        v.memory = MEMORY_WORKER_NODE
        v.cpus = CPUS_WORKER_NODE
      end
    end
  end

  config.vm.provision :ansible do |ansible|
    ansible.verbose = "vv"
    ansible.playbook = "bootstrap.yaml"
  end

  config.vm.provision :ansible do |ansible|
    ansible.verbose = "vv"
    ansible.playbook = "../../robot/initial.yaml"
  end

  config.vm.provision :ansible do |ansible|
    ansible.verbose = "vv"
    ansible.playbook = "../../robot/dependencies.yaml"
  end

  config.vm.provision :ansible do |ansible|
    ansible.groups = {
      "masters" => ["kmaster"],
      "slaves"  => ["kworker1", "kworker2"]
    }
    ansible.verbose = "vv"
    ansible.playbook = "../../robot/k8scluster.yaml"
  end
end
