version: '3.9'

networks:
  observer-network:
    name: observer-network
    driver: bridge

volumes:
  portainer_data:
  opensearch-data1:
  opensearch-data2:

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 8000:8000
      - 9443:9443
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  opentelemetry-agent:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: opentelemetry-agent
    privileged: true
    command:
      [
        '--config=/etc/otelcol-contrib/otel-agent-config.yaml'
      ]
    volumes:
      - ./volume/otel-agent-config.yaml:/etc/otelcol-contrib/otel-agent-config.yaml
      - /:/hostfs
      - /var/log/system.log:/var/log/system.log
    environment:
      - SERVICE_NAME=${SERVICE_NAME}
      - STATION_CODE=${STATION_CODE}
      - HOST_NAME=${HOST_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    ports:
      - 1888:1888
      - 13133:13133
      - 4317:4317
      - 4318:4318
      - 8888:8888
      - 8889:8889
      - 55670:55679
      - 55681
        #      - 54527:54527
    networks:
      - observer-network
 
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 16686:16686
      - 14268
      - 14250
    networks:
      - observer-network
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./volume/prometheus-config.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - observer-network

  opensearch-node1:
    image: opensearchstaging/opensearch:2.14.0.9820
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - plugins.query.datasources.encryption.masterkey=${MASTER_KEY_SALT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - observer-network

  opensearch-node2:
    image: opensearchstaging/opensearch:2.14.0.9820
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - plugins.query.datasources.encryption.masterkey=${MASTER_KEY_SALT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - observer-network

  dashboards:
    image: opensearchstaging/opensearch-dashboards:2.14.0.7635
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]'
    depends_on:
      - opensearch-node1
    networks:
      - observer-network
  
  data-prepper:
    image: opensearchproject/data-prepper:latest
    container_name: data-prepper
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./volume/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
      - ./volume/data-prepper-config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml
    ports:
      - 21890:21890
      - 21891:21891
      - 21892:21892
    depends_on:
      - opentelemetry-agent
      - opensearch-node1
    networks:
      - observer-network

  mysql:
    container_name: mysql
    image: mysql:latest
    ports:
      - 3306:3306
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - observer-network

  sample-app:
    container_name: sample-app
    build:
      context: sample-app
      dockerfile: Dockerfile
    ports:
      - '8082:8082' # inventory
      - '8083:8083' # database
      - '8084:8084' # payment
      - '8085:8085' # auth
      - '8086:8086' # recommendation
      - '8087:8087' # analytics-service
      - '8088:8088' # order
      - '8089:8089' # client-dashboard
    environment:
      - OTEL_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://opentelemetry-agent:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=analytics-service
      - OTLP=opentelemetry-agent
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - WAIT_HOSTS=opentelemetry-agent:4317, mysql:3306
    depends_on:
      - opentelemetry-agent
      - mysql
    networks:
      - observer-network
