apiVersion: v1
data:
  relay: |
    exporters:
      debug:
        verbosity: detailed
      prometheus/export:
        endpoint: :8889
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      k8sattributes:
        auth_type: serviceAccount
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.start_time
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
    receivers:
      k8s_cluster:
        collection_interval: 10s
        metrics:
          k8s.container.cpu_request:
          k8s.container.cpu_limit:
            enabled: true
          k8s.container.memory_request:
            enabled: true
          k8s.container.memory_limit:
            enabled: true
          k8s.container.storage_request:
            enabled: true
          k8s.container.storage_limit:
            enabled: true
          k8s.container.ephemeralstorage_request:
            enabled: true
          k8s.container.ephemeralstorage_limit:
            enabled: true
          k8s.container.restarts:
            enabled: true
          k8s.container.ready:
            enabled: true
          k8s.pod.phase:
            enabled: true
          k8s.pod.status_reason:
            enabled: true
          k8s.deployment.desired:
            enabled: true
          k8s.deployment.available:
            enabled: true
          k8s.cronjob.active_jobs:
            enabled: true
          k8s.daemonset.current_scheduled_nodes:
            enabled: true
          k8s.daemonset.desired_scheduled_nodes:
            enabled: true
          k8s.daemonset.misscheduled_nodes:
            enabled: true
          k8s.daemonset.ready_nodes:
            enabled: true
          k8s.hpa.max_replicas:
            enabled: true
          k8s.hpa.min_replicas:
            enabled: true
          k8s.hpa.current_replicas:
            enabled: true
          k8s.hpa.desired_replicas:
            enabled: true
          k8s.job.active_pods:
            enabled: true
          k8s.job.desired_successful_pods:
            enabled: true
          k8s.job.failed_pods:
            enabled: true
          k8s.job.max_parallel_pods:
            enabled: true
          k8s.job.successful_pods:
            enabled: true
          k8s.namespace.phase:
            enabled: true
          k8s.replicaset.desired:
            enabled: true
          k8s.replicaset.available:
            enabled: true
          k8s.replication_controller.desired:
            enabled: true
          k8s.replication_controller.available:
            enabled: true
          k8s.resource_quota.hard_limit:
            enabled: true
          k8s.resource_quota.used:
            enabled: true
          k8s.statefulset.desired_pods:
            enabled: true
          k8s.statefulset.ready_pods:
            enabled: true
          k8s.statefulset.current_pods:
            enabled: true
          k8s.statefulset.updated_pods:
            enabled: true
          k8s.node.condition:
            enabled: true
        resource_attributes:
          k8s.namespace.uid:
            enabled: true
          k8s.namespace.name:
            enabled: true
          k8s.node.uid:
            enabled: true
          k8s.node.name:
            enabled: true
          container.id:
            enabled: true
          container.image.name:
            enabled: true
          container.image.tag:
            enabled: true
          k8s.container.name:
            enabled: true
          k8s.pod.name:
            enabled: true
          k8s.pod.uid:
            enabled: true
          k8s.pod.qos_class:
            enabled: true
          k8s.replicaset.name: 
            enabled: true
          k8s.replicaset.uid:
            enabled: true
          k8s.replicationcontroller.name:
            enabled: true
          k8s.resourcequota.name:
            enabled: true
          k8s.statefulset.uid:
            enabled: true
          k8s.statefulset.name:
            enabled: true
          k8s.deployment.uid:
            enabled: true
          k8s.deployment.name:
            enabled: true
          k8s.cronjob.uid:
            enabled: true
          k8s.cronjob.name:
            enabled: true
          k8s.daemonset.name:
            enabled: true
          k8s.daemonset.uid:
            enabled: true
          k8s.hpa.uid:
            enabled: true
          k8s.hpa.name:
            enabled: true
          k8s.job.name:
            enabled: true
          k8s.job.uid:
            enabled: true
          k8s.kubelet.version:
            enabled: true
          container.runtime:
            enabled: true
          container.runtime.version:
            enabled: true
          os.description:
            enabled: true
          os.type:
            enabled: true
          k8s.container.status.last_terminated_reason:
            enabled: true
        auth_type: serviceAccount
        node_conditions_to_report:
          - Ready
          - DiskPressure
          - MemoryPressure
          - PIDPressure
          - NetworkUnavailable
        allocatable_types_to_report:
          - cpu
          - memory
          - ephemeral-storage
          - storage
      kubeletstats:
        collection_interval: 10s
        auth_type: serviceAccount
        endpoint: ${env:K8S_NODE_NAME}:10250
        node: ${env:K8S_NODE_NAME}
        k8s_api_config:
          auth_type: serviceAccount
        extra_metadata_labels:
          - container.id
          - k8s.volume.type
        metric_groups:
          - container
          - pod
          - node
          - volume
        metrics:
          container.cpu.usage:
            enabled: true
          container.uptime:
            enabled: true
          k8s.container.cpu.node.utilization:
            enabled: true
          k8s.container.cpu_limit_utilization:
            enabled: true
          k8s.container.cpu_request_utilization:
            enabled: true
          k8s.container.memory_limit_utilization:
            enabled: true
          k8s.container.memory_request_utilization:
            enabled: true
          k8s.node.cpu.usage:
            enabled: true
          k8s.node.uptime:
            enabled: true
          k8s.pod.cpu.node.utilization:
            enabled: false
          k8s.pod.cpu.usage:
            enabled: true
          k8s.pod.cpu_limit_utilization:
            enabled: true
          k8s.pod.cpu_request_utilization:
            enabled: true
          k8s.pod.memory_limit_utilization:
            enabled: true
          k8s.pod.memory_request_utilization:
            enabled: true
          k8s.pod.uptime:
            enabled: true
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
    service:
      extensions:
      - health_check
      pipelines:
        logs:
          exporters:
          - debug
          processors:
          - memory_limiter
          - batch
          - k8sattributes
          receivers:
          - otlp
          - k8s_cluster
        metrics:
          exporters:
          - debug
          - prometheus/export
          processors:
          - batch
          - k8sattributes
          receivers:
          - k8s_cluster
          - kubeletstats
          - otlp
        traces:
          exporters:
          - debug
          processors:
          - memory_limiter
          - batch
          - k8sattributes
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: deployment-collector-dev
    app.kubernetes.io/name: opentelemetry-collector
  name: deployment-collector-dev-opentelemetry-collector
  namespace: default
