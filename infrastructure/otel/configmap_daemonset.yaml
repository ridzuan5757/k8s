apiVersion: v1
data:
  relay: |
    exporters:
      otlp/dataprepper-traces:
        endpoint: data-prepper:21890
        tls:
          insecure: true
          insecure_skip_verify: true
      otlp/dataprepper-metrics:
        endpoint: data-prepper:21891
        tls:
          insecure: true
          insecure_skip_verify: true
      otlp/dataprepper-logs:
        endpoint: data-prepper:21892
        tls:
          insecure: true
          insecure_skip_verify: true
      debug:
        verbosity: detailed
      otlp/deployment:
        endpoint: deployment-collector-dev-opentelemetry-collector.default.svc.cluster.local:4317
        tls:
          insecure: true
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    processors:
      metricstransform:
        transforms:
          - include: (.*?)
            match_type: regexp
            action: update
            operations:
              - action: add_label
                new_label: node.name
                new_value: ${env:K8S_NODE_NAME}
      resource:
        attributes:
          - key: node.name
            value: ${env:K8S_NODE_NAME}
            action: upsert
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      k8sattributes:
        auth_type: serviceAccount
        passthrough: true
        filter:
          node_from_env_var: ${env:K8S_NODE_NAME}
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.start_time
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: connection
    receivers:
      filelog:
        include:
          - /var/log/pods/*/*/*.log
        exclude:
          # Exclude logs from all containers named otel-collector
          - /var/log/pods/*/otel-collector/*.log
        start_at: beginning
        include_file_path: true
        include_file_name: false
        operators:
          # Find out which format is used by kubernetes
          - type: router
            id: get-format
            routes:
              - output: parser-docker
                expr: 'body matches "^\\{"'
              - output: parser-crio
                expr: 'body matches "^[^ Z]+ "'
              - output: parser-containerd
                expr: 'body matches "^[^ Z]+Z"'
          # Parse CRI-O format
          - type: regex_parser
            id: parser-crio
            regex:
              '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*)
              ?(?P<log>.*)$'
            output: extract_metadata_from_filepath
            timestamp:
              parse_from: attributes.time
              layout_type: gotime
              layout: '2006-01-02T15:04:05.999999999Z07:00'
          # Parse CRI-Containerd format
          - type: regex_parser
            id: parser-containerd
            regex:
              '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*)
              ?(?P<log>.*)$'
            output: extract_metadata_from_filepath
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'
          # Parse Docker format
          - type: json_parser
            id: parser-docker
            output: extract_metadata_from_filepath
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'
          - type: move
            from: attributes.log
            to: body
          # Extract metadata from file path
          - type: regex_parser
            id: extract_metadata_from_filepath
            regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
            parse_from: attributes["log.file.path"]
            cache:
              size: 128 # default maximum amount of Pods per Node is 110
          # Rename attributes
          - type: move
            from: attributes.stream
            to: attributes["log.iostream"]
          - type: move
            from: attributes.container_name
            to: resource["k8s.container.name"]
          - type: move
            from: attributes.namespace
            to: resource["k8s.namespace.name"]
          - type: move
            from: attributes.pod_name
            to: resource["k8s.pod.name"]
          - type: move
            from: attributes.restart_count
            to: resource["k8s.container.restart_count"]
          - type: move
            from: attributes.uid
            to: resource["k8s.pod.uid"]
      hostmetrics:
        root_path: /hostfs
        collection_interval: 1s
        scrapers:
          cpu:
            metrics:
              system.cpu.time:
                enabled: false
              system.cpu.frequency:
                enabled: false
              system.cpu.logical.count:
                enabled: false
              system.cpu.physical.count:
                enabled: false
              system.cpu.utilization:
                enabled: true
          load:
            metrics:
              system.cpu.load_average.15m:
                enabled: true
              system.cpu.load_average.1m:
                enabled: false
              system.cpu.load_average.5m:
                enabled: false
          memory:
            metrics:
              system.memory.usage:
                enabled: false
              system.linux.memory.available:
                enabled: true
              system.memory.limit:
                enabled: false
              system.memory.utilization:
                enabled: true
          disk:
            metrics:
              system.disk.io:
                enabled: false
              system.disk.io_time:
                enabled: false
              system.disk.merged:
                enabled: false
              system.disk.operation_time:
                enabled: false
              system.disk.operations:
                enabled: false
              system.disk.pending_operations:
                enabled: false
              system.disk.weighted_io_time:
                enabled: false
          filesystem:
            metrics:
              system.filesystem.inodes.usage:
                enabled: false
              system.filesystem.usage:
                enabled: true
              system.filesystem.utilization:
                enabled: true
          network:
            metrics:
              system.network.connections:
                enabled: true
              system.network.dropped:
                enabled: true
              system.network.errors:
                enabled: true
              system.network.io:
                enabled: true
              system.network.packets:
                enabled: true
              system.network.conntrack.count:
                enabled: false
              system.network.conntrack.max:
                enabled: false
          paging:
            metrics:
              system.paging.faults:
                enabled: true
              system.paging.operations:
                enabled: false
              system.paging.usage:
                enabled: true
              system.paging.utilization:
                enabled: true
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 10s
        endpoint: ${env:K8S_NODE_NAME}:10250
        node: ${env:K8S_NODE_NAME}
        insecure_skip_verify: true
        k8s_api_config:
          auth_type: serviceAccount
        extra_metadata_labels:
          - container.id
          - k8s.volume.type
        metric_groups:
          - container
          - pod
          - node
          - volume
        metrics:
          container.cpu.usage:
            enabled: true
          container.uptime:
            enabled: true
          k8s.container.cpu.node.utilization:
            enabled: true
          k8s.container.cpu_limit_utilization:
            enabled: true
          k8s.container.cpu_request_utilization:
            enabled: true
          k8s.container.memory_limit_utilization:
            enabled: true
          k8s.container.memory_request_utilization:
            enabled: true
          k8s.node.cpu.usage:
            enabled: true
          k8s.node.uptime:
            enabled: true
          k8s.pod.cpu.node.utilization:
            enabled: false
          k8s.pod.cpu.usage:
            enabled: true
          k8s.pod.cpu_limit_utilization:
            enabled: true
          k8s.pod.cpu_request_utilization:
            enabled: true
          k8s.pod.memory_limit_utilization:
            enabled: true
          k8s.pod.memory_request_utilization:
            enabled: true
          k8s.pod.uptime:
            enabled: true
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
    service:
      extensions:
      - health_check
      pipelines:
        logs:
          exporters:
          - otlp/dataprepper-logs
          - debug
          processors:
          - resource
          - k8sattributes
          - memory_limiter
          - batch
          receivers:
          - otlp
        metrics:
          exporters:
          - otlp/deployment
          - otlp/dataprepper-metrics
          processors:
          - metricstransform
          - resource
          - k8sattributes
          - memory_limiter
          receivers:
          - kubeletstats
          - hostmetrics
          - otlp
        traces:
          exporters:
          - otlp/dataprepper-traces
          processors:
          - resource
          - memory_limiter
          - batch
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: agent-opentelemetry-collector
    app.kubernetes.io/name: opentelemetry-collector
  name: agent-opentelemetry-collector
  namespace: default
